SOLID
    S - single responsibility
        единственная ответственность
        метод/класс должен отвечать за что-то одно
    O - open/close
        Программные сущности (классы, модули, функции) должны быть открыты для расширения, но не для модификации
        изменение поведения только через расширение
    L - Liskov Principle
        Необходимо, чтобы подклассы могли бы служить заменой для своих суперклассов.
    I - interface segregation
        Создавайте узкоспециализированные интерфейсы, предназначенные для конкретного клиента. Клиенты не должны зависеть от интерфейсов, которые они не используют.
    D


Логирование
    структурированное имя файла + дата/время
    критерии ротации логов (период удаления, архивации, перезаписи логов)
    набор логируемых событий
        на этапе разработки максимум информации в логе, к релизу уменьшаем
        хорошо помогают уровни логирования